<br> is a break tag 




<b> is bold tag
<strong> is important text 
<i> is italic text
<em> is emphasised text
<mark> is marked text
<small> is smaller tag 
<del> is deleted text 
<ins> is inserted text 
<sub> is subscript text 
<sup> is superscriprt text








<hr> is a horizontal row tag used as <hr size="4">

attributes 
<hr attribute ="value"

size
noshade 
width
color 
align 
charset
name


alingment tags are 

<center>
<left>
<right>














<p> ias used to right html

as  
        <p align="center">  paragraph </p>




















<!-- here this is a comment -->























describe metadata in an HTML document

<head>
<meta charset="UTF-8">

additional meta with attribute

<meta name="attribute" content="HTML, CSS , JS">

description 
keywords
author
viewport


we also have a shareable post defining code 

which is OG:ATTRIBUTE  


it used to display some data with shareable link


code as





<meta property="og:title" content="title">           


other attributes

og:image 
og:discription




















for italic 

we can use <i> or <em>


for bold 

we can use <strong> or <b>































To add a bullet list 

       <ul>

            <li> SEO </li>
            <li> BACKINKS </li>
            <li> SEO KEYWORD RESEARCH</li>
            <li> BACKINKS FORMING  </li>
            <li> TECHNICAL SEO </li>
            <li> ON PAGE SEO </li>
            <li> OFF PAGE SEO </li>
            <li> SE0 FRIENDLY CONTENT </li>
            
        </ul>

here <ul> refer to unordered list
for ordered list just simply use <ol> at the place of <ul> 


as          <ol type="i">
 
        <!--here "i" is to refer roman number form -->

            <li> SEO </li>
            <li> BACKINKS </li>
            <li> SEO KEYWORD RESEARCH</li>
            <li> BACKINKS FORMING  </li>
            <li> TECHNICAL SEO </li>
            <li> ON PAGE SEO </li>
            <li> OFF PAGE SEO </li>
            <li> SE0 FRIENDLY CONTENT </li>
            
        </ol>

























to add image 

we use <img src="imgs/me.Png" alt="N.S.JARYAL">

ALT is alternative text

to set img we take the use of styles attribute

as

<img styles="float:left" src="imgs/me.Png" alt="N.S.JARYAL">







to show responsive images we take use of "srcset" attribute 

as



<img srcset="low quality.png 1x,
             mid quality.png 2x,

            high quality.png 3x"

           alt="img"

       src="high quality.png">


     

here 1x, 2x and 3x refer to [DPR] device pixel ratio 



OR



for the maximum competebility

we define some conditions for device pixel width denote as : 1220w


and code as 



<img srcset="low quality.png 500w,
             mid quality.png 1000w,

            high quality.png 2000w"


             sizes="(max-width: 500px) 500px,
                     (max-width: 1000px) 1000px,
                      (max-width: 2000px) 2000px,"




       src="high quality.png">

           alt="img"










similarly if we want to add some video 


we can do it as 

 <video src="video.mkv" width="50%" autoplay> </Video>



<video src="video.mkv" width="50%" controls> </Video>



<video src="video.mkv" width="50%" controls loop muted poster="img link"> </Video>










for embed any video or any document we use <iframe> tag




<iframe width="xyx.." height="abc.." src="link" frameborder="0"> </iframe>

        











































to make a link we use anchor tag 

<a href="link">word or image</a>

herf is attribute


to make inpage link we have to use Id attribute with the the tag to
be linked 

as 

STEP 1 

<p id="here" > connect with me </p>


STEP 2

here we specify a id by using #

<a href="#here"> click here </a>

the gernal concern over here is that at what we click on opens in the
same tab 

but we want it to be open in new tab 
 
so we set an another attribute called target


as 


 <a target="_blank" href="https://nishantjaryal.github.io/go/"> click here </a>



here 


<a target="_blank" href="https://nishantjaryal.github.io/go/"> click here </a>

  refer to open link in a new tab 


and 


<a target="_self" href="https://nishantjaryal.github.io/go/"> click here </a>   

refer to open link in original tab


 


to link e-mail 


<a href="mailto:nishantjaryal24@gmail.com"> Mail me </a>


to link phone no. 


<a href="tel:+917986349492"> Call me </a>


to back to the top we use


<a href="#"> back to top </a>























































 to form a table we use a <table> tag
   <tr> is table row 
   <td> is table data 

<td> is cell data


table tags 

as

<thead>
        <tr>
            <th>
                
            </th>

            <th>
            </th>
        </tr>

    </thead>


others
    
<tbody> body
<tfoot> footer

<th> and <td>  used only


attributes
to add border

<table border =" 2 ">

for adding a color 

<table border="6" bgcolor="yellow" cellspacing="3">





<caption> define caption or title  of table 
as 

<caption>my marksheet</caption>



<colgroup> used to groupise the columns 
    
   as <col span="3" style="background-color: red;">



  span show no. of columns at which command applied




in  a  table if  we want cell to aquire more space 

then we use colspan or rowspan attribute inside <td> or <th>






























































to creat a form 
we use 
 <form> tag 

as

<form class="" action="mailto:nishantjaryal24@gmail.com" method="post">

    
</form>

inside the form tag we kept lables 
as <label> the job for the lable is to lable input 
from client 

to take input we you <input> tag 


as

<input type="text" name="" value=""> 

<input type="submit" value="save">

we can set the types as 

color
text
checkbox 
pasword
file
range
radio
date
reset
url
number

and


<input type="text" name="" value="">
<br>
 <input type="file" name="" value="">
<br>
<input type="radio" name="" value="">
<br>
<input type="date" name="" value="">
<br>
<input type="range" name="" value="">
<br>
<input type="email" name="" value="">
<br>
<textarea    name="name" rows="8"  cols="50"></textarea>










      <form action="main.html"> 
      <label>give me access of site via branched server, its urgent</label>

      <input class="ddddddddddd" type="checkbox" required>

      <br>
      
      <input class="nav-aa" type="submit">
    </form>
















































to make them inline we take the use of lable 


<lable><input type="text" name="" value="" required></lable>




we use "required" attributed for required things




<lable><input type="file" name="" value=""></lable>




for a single choice input we have to define name attribute



<input type="radio" name="one choice" value="small">

<input type="radio" name="one choice" value="mid">

<input type="radio" name="one choice" value="large">

<input type="radio" name="one choice" value="x-large">





to get work from whole element as radio


<lable for="small"> small </Lable> 

<input id="small" type="radio" name="one choice" value="">





































to creat a dropdown list


we use select 
 as 

<lable for="cars" > cars </lable>

<select id="cars" name="cars"> 


    <option value="" > --select a card--</option>


   <option value="jaguar"> jaguar </option>
   <option value="bmw"   > bmw    </option>
   <option>value="range rover"> range rover </option>
   <option value="mercedes"   > mercedes </option>

   <input type="submit" name="" value="thanks">





we use "get" method  to post normal information

we use "host"  ""        ""            ""   
   


































for wrapping the content we take use of <fieldset> 

as


<fieldset> 
 <legend> name </legend>



              
            any content




</fieldset>








































symmentic tags : they help machine to understand that what is hierchy of
                 the website 

                 also help to get better seo results.




<header>

<main>





<nav> 

as


<nav>

<li>by using id link in page</li>

<li></li>

<li></li>

<li></li>

<li></li>

</nav>   



in css id follow #
and class follow .





   

<section>

<article>

<aside>      here we have to use css

<footer>

















































































css <cascading styling>


tags 
<font>
<center>

<h1 attribute="value">

attributes 

bgcolor














to align the text we used text-aligned element 


body {

      font-size : 24px;
      font-family : sans-serif;
      text-align : center;
      color: darkcyan ;
      background-color : whitesmoke;
    
     }




priority list 


id > class > element










to forcefully apply property 

we take the use of "!important" command in css


as 




.me {
 

     color: purple !important

    }
































to comply a property to all elements we take use of
the universal selector "*"


as


* {  
       define a property 

  }




   

  text-aligned only used in body css   



































inline css 

<body style="background-color:blue;">

or 

we can 

h1 {
        background-color: greenyellow;
        color:darkgreen
    }


</style>


here color attribute specifies color of the text 

   <style> 

    body {background-color:hsl(56, 87%, 94%);}

</style>


and


<style>
    hr {background-color:white;
    border-style: dotted none none;
    border-width: 5px ;
    height: 0px;
    width: 30%;
    }
    
</style>


or


<style>
    hr {background-color:white;
    border-style:  none;
    border-top-style: dotted;
    border-width: 5px ;
    height: 0px;
    width: 30%;
    }
    
</style>

it doesnt work well with background color as black


other attributes 

border-width




and



<style>
   
    h1 {
        background-color: greenyellow;
        color:darkgreen;
        border-radius: 10%;
        text-align: center;
    }
</style>
  

and

<style> 
      img {
        
        width: 75%;
        
        border-radius: 50px;
     
      border-width: 5px ;

      border-style:dashed;

      border-color: darkgreen ;

      }
</style>





border style 

dotted 
dashed 
solid
doubled
groove
ridge
inset



<style>

    form {

        border-style: dashed;
        border-color: greenyellow;
        border-width: 5px;
        border-radius: 15%;
        background-color:whitesmoke;
        width: 50%;
    }
</style>




























external css


make a folder in vs code 

folder name: styles.css


copy paste css data in it

and link a to index page 


< b rel="stylesheet" href="css/styles.css">
   

CSS RULE
selector{property:value}


we can also use class in html attribute to diff in css code 
as
 
<img class="anything" src="" alt="">

to add acomment in a css we use 


*/ comment */



.class {property:value}



effects by pseudo class


img:hover{border-radius: 0%;}
img:visted {border-radius: 0%;}











to add a background image in css 

          .class {
              
            background-image:url("/shares.pic/wave.svg") ;
            background-repeat: no-repeat;
            height: y;
            width : x;
            background-position: top center ;
            background-size: 50%;
            background-attachment: fixed;        { to get mast scrolling effect                 
    

              }



 
 to repeat image in the x-axis we take the use of  

            background-repeat:  repeat-x;



also applicable for y-axis

    




       for placing the image we take the use of 

              background-attachment: fixed;
  

        or


              background-attachment: scroll ;
  
        for positioning of a image we take the use of
           
        
          background-position: left center;
 

   

font weight property 



       font-weight : 100 to 900 ;





     text formatting in CSS


color







text-align       ( center,left,right, justify )

text-decoration

text-transform

text-intent          space before start text in line

line-height

letter-spacing

word-spacing

text-shadow: x  y  blur( px ) color














<i> tag also used to demonstrate icon 
search on browser  



to style the list items we take 

list-style-type: square;


   it may be   disc, square, circle or roman


     
list-style-position: inside or outside 



      we also use images as the bullets


li {

      

list-style-type: url("bullets.png")

        

          }




to creat a nav element



   a {
       text-decoration : none;
       padding
       text alling to center
       float: left
          }


   nav 

      {
        
       background-color 
       overflow: hidden;      

         }





      use hover and visited property







to creat responsive navbar


nav  { display:flex;
flex-direction:row;
         overflow: hidden}



nav a {display:block;
float:left;}

nav a item {margin-left:auto;}


@media screen and (max-width:600px;)
{nav{flex-direction:column}}












































for linking of sheets

    <link rel="stylesheet" href="css/styles.css">

    <link rel="icon" href="imgs/nsi.ico.png">






















to devide pages in sections we take use of div 

as 
    <div class="">

     
    <h1> I'm Nishant</h1>
    <p>
        I'm a web developer
    </p>


    </div>
     
    
the box model

 if we want a single lined border then we take the use of border collapse propertys

div  {
 background-color: #e4f9f5;
 border-style: ridge;
 border-width: 0px ;
 border-color: darkgreen;
 padding: 1px;
margin: 0%;
border-collapse: collapse;
border-spacing: 10px;
 }


                  or 


 <div class="top" >

        <h1> I'm Nishant</h1>
         <p>
            I'm a web developer
        </p>

    </div>


in css


 .top {
 background-color: #e4f9f5;
 border-style: ridge;
 border-width: 0px ;
 border-color: darkgreen;
 padding: 1px;
margin: 0%;

 }



 div edits

 .myimg {width:20%;
border-radius: 100%;}

.myimg:hover {border-radius: 23%;}



to change the text appearance we take use of text decoration
attribute


 .ibottom {

    margin-top: 2%;
    margin-bottom: 0%;
    width: 80%;
    text-decoration: underline;
    
 }





to highlight inline result we take use of span element 

as




        <h1 class="me"><span>Hi, I'm Nishant</span></h1>





we also use span to show inline elements 

as 




 <left>
       
         
       <span> <strong> <a href="https://www.youtube.com">AWNSERS</a></strong></span> 
       <span><strong> <a href="about me.html">about me</a></strong></span> 
       <span><strong>
                    
        <a href="skills.html">skill">

    
</strong></span> 
       <span> <strong>
        <a href="CONTACT ME.html">contact me</a>
</strong></span> 
       <span><strong>
        <a href="subscribe me.html">subscribe me</a>
</strong></span>



    </left>






to change the position

img {position: relative; left:30%;}







to inline the element span element is used 

<span></span>


to arrange the elements
we use position tag in css

position:absolute                                                it may be relative, absolut or fixed 













in css text-decoration is used to decor the text by basic text functions eg. <u>,<i>,<b>



 margin : 10    10    10    10
    as   top   right  down  left






to change font we take use of font tag in css 


as {font-family: sans-serif;
    font-type:
    font-color:
    font-size:              }                     take size in rem and 1 rem= 16 pxs



to increase the line height 

we use line height prooerty in CSS as 

line-height: 2 









to wrap the text around the img we use float property 

 
as for img in css 


float: left;





margins work out side the border but padding work inside the border 















 



to creat a button 


in simple 

we take 

<button class="btn"> click here </button>



.btn {add elements


as   border-radius: (use px or rem)

                     }


            

.btntp
       {border-color: black;
        background-color: white;
       box-shadow: 0px 0px 30px #ffea00;   as     ( x  y  (blur range)   color )
        width: 6rem;
        height: 3rem;
        border-radius: 3rem;
        font-size: 1rem;
        border-style: solid;
        color: black;
        position: fixed;            }


        .btntp:hover 
        
       {border-color: white;
         background-color: black;
         width: 7rem;
         height: 4rem;
         border-radius: 3rem;
         font-size: 1rem;
         color: white ;
         text-transform: uppercase;
         box-shadow: x y 4px  black     }




         to provide 3d texture to the button 

         we add
         box-shadow: -7px 7px 0 hsl(hue, saturation, lightness);
                or we can also use RGB





             and at hover we make x and y zero 

to get gradient bordered button

border-image: linear-gradient (to top right, red , blue);
border-image-slice:1;









to add animation 

   .type {animation: name duration timing-function delay iteration-count direction fill-mode;}
    @keyframes typanim {from{width: 0%}}



but in side bootstrap

only html is needed to be changed.




as 

<button class="btn btn-lg btn-white btn-outline-dark"> click here </button>



<pre> tag used to display content as
we write it on edittor.











display propertys

display: inline;
display: block:
dispaly: inline-block *



float:left;



to get out some thing from float 

we use clear 

clear: right;








to make a sticky navbar 

by defoult we use 

position: static ;     normal flow of the element
position: relative;    relative distnc and direct to original one 
position: absolute;    distnc in particular direction 
position: fixed;       fixed respect to screen 
          it is used in navbar































flexbox


.nav-flex-container { overflow: hidden;
         display: flex;
         flex-direction: row;
         flex-wrap: wrap;
         justify-content: center;
         align-items: center;
       }






Property	        Description
align-content     Modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines
align-items	      Vertically aligns the flex items when the items do not use all available space on the cross-axis
display         	Specifies the type of box used for an HTML element
flex-direction	  Specifies the direction of the flexible items inside a flex container
flex-flow	        A shorthand property for flex-direction and flex-wrap
flex-wrap	        Specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line
justify-content	  Horizontally aligns the flex items when the items do not use all available space on the main-axis














gridbox 





display: grid;                                they are completely non flexible
grid-template-column: 1fr 1fr 1fr;
grid-gap: 20px;
grid-auto-rows: minmax(100px,auto);




to make it responsive 

grid-template-column: repeat(auto-fill,minmax(100px,1fr));




we can also use rowspan property here 


grid-row-start: 1
grid-row-end: 3












to animate the code we use use transition property

transition: 2s;
transition-delay: 2s;









animation 
 
.gola { width:100px ;
        transition: width 2s }

.gola:hover { width:555px }




















































<div> and <span are our  grouping tags 

<div> is a block element while <span> is a inline element































.class { color: inherit } 

          here by this element will inherit the property from parent element








to manage the overflow

 to hide overflow

  .class {overflow : hidden}    

or we can use scroll, auto etc




















to contain image we take use of 
 
 {object-fit: contain}

  also we can take use of fill or cover


















to creat a navigation bar

in html

<!-- The navigation menu -->


<div class="navbar">
  <a href="#home">Home</a>
  <div class="subnav">
    <button class="subnavbtn">About <i class="fa fa-caret-down"></i></button>
    <div class="subnav-content">
      <a href="#company">Company</a>
      <a href="#team">Team</a>
      <a href="#careers">Careers</a>
    </div>


in css

/* The navigation menu */
.navbar {
  overflow: hidden;
  background-color: #333;
}

/* Navigation links */
.navbar a {
  float: left;
  font-size: 16px;
  color: white;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
   outline: none;
}



















to make your image into shape format we use clip-path-maker tool



bennettfeely.com/clippy/
 
.class { clip-path : circle(46% at 65% 65%); }



if we are creating a multilayer card and we want a specific layer to came on the top 

then we use 

z-index property in css 


  z-index: 1 ;

   higher the no. more upward the position  


















to creat a side bar  

allocate a full height 35% width box 
          and design it 




use the other sources 

for definining a restriction to property           


@media screen and (width:600px)
{  body{ color:red; }   } 
   
        or
  
@media not all and (orientation:landscape)         iske ilawa  
{  body{ color:red; }   } 


also we can use to creat sidebar

<li><a class="anchorclass" data-email="email " href="mailto: email">email </a> 
</Li>

<li><a class="anchorclass" data-email="email " href="mailto: email">email </a> 
</Li

><li><a class="anchorclass" data-email="email " href="mailto: email">email </a> 
</Li>


@media all and (min-width: 1001px)

{ #sidebar .anchorclass:after {
                                  content:"("attr(data-email)")";

                                    font-style: italic;



                                          }  }

            

@media all and (max-width: 1001px) and (min-width: 700px)

{ #sidebar .anchorclass:after {
                                  content:Email ;

                                    font-style: italic;



                                          }  }
 


 

and


                              GRIDS

.heading {height: 60px;
   min-height: 50px;
         display: grid;
        place-items: center;
      margin-bottom: 15px;}


  
















































































use full websites


https://sneakpeekit.com/

https://undraw.co/

https://tailwindcss.com/

https://nishantjaryal.github.io/go/

https://compressnow.com/

https://iloveimg.com/

https://favicon.io/

to deploy the website on web we can use github.com

https://whimsical.com/  for web designing


 







